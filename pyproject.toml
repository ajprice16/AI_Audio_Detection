[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-audio-detector"
version = "1.0.0"
description = "Machine learning system for detecting AI-generated audio using Benford's Law and advanced spectral features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Alex Price", email = "ajprice@mail.wli.edu"}
]
keywords = ["ai", "detection", "audio", "machine-learning", "benford-law", "audio-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "librosa>=0.9.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "tqdm>=4.62.0",
    "joblib>=1.1.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "flake8>=3.9.0",
    "black>=21.0.0",
    "mypy>=0.910",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=2.15.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.25.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.scripts]
ai-audio-detector = "ai_audio_detector:main"

[project.urls]
"Homepage" = "https://github.com/ajprice16/AI_Audio_Detection"
"Bug Reports" = "https://github.com/ajprice16/AI_Audio_Detection/issues"
"Source" = "https://github.com/ajprice16/AI_Audio_Detection"
"Documentation" = "https://github.com/ajprice16/AI_Audio_Detection#readme"
"Changelog" = "https://github.com/ajprice16/AI_Audio_Detection/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["ai_audio_detector"]
include-package-data = true

[tool.setuptools.package-data]
ai_audio_detector = ["*.yaml", "*.yml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]  # Skip assert_used and shell=True warnings for tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
